# get an AUTHORIZATION_TOKEN
# see https://rasa.com/docs/rasa-x/pages/http-api#tag/Authentication
POST  http://XXX.XXX.XXX.XXX/api/auth
content-type: application/json

{
    "username": "admin",
    "password": "safe_credential"

}
###

# activate enterprise mode
# see https://rasa.com/docs/rasa-x/enterprise/activation
# using curl:
# curl --request POST \
#      --url http://foo.rasactl.localhost/api/license \
#      --header 'Authorization: Bearer AUTHORIZATION_TOKEN \
#      --header 'Content-Type: application/json' \
#      --data '{"license": "LICENSE_STRING"}'
POST http://XXX.XXX.XXX.XXX/api/license
Authorization: Bearer AUTHORIZATION_TOKEN
Content-Type: application/json

{
    "license": "LICENSE_STRING"

}

# dump a conversation given a CONVERSATION_ID
# see: https://rasa.com/docs/rasa-x/pages/http-api#operation/getConversationInFormat
GET http://XXX.XXX.XXX.XXX/api/conversations/CONVERSATION_ID 
content-type: application/json
Authorization: Bearer AUTHORIZATION_TOKEN

###

# get a list of conversations
# see: https://rasa.com/docs/rasa-x/pages/http-api#operation/getConversations

GET http://XXX.XXX.XXX.XXX/api/conversations?input_channels=rest
content-type: application/json
Authorization: Bearer AUTHORIZATION_TOKEN

###

# post a message in the rest channel
POST http://XXX.XXX.XXX.XXX/webhooks/rest/webhook
Content-Type: application/json

{
    "sender": "rest_user",
    "message": "I want to transfer money"
}


###

# get all data tags, including the value of their id
GET http://XXX.XXX.XXX.XXX/api/data_tags
content-type: application/json
Authorization: Bearer AUTHORIZATION_TOKEN

###

# delete a specific tag id
DELETE http://XXX.XXX.XXX.XXX/api/data_tags/<TAG_ID>
content-type: application/json
Authorization: Bearer AUTHORIZATION_TOKEN

###

# the logs endpoint
# project id is "default"
POST http://XXX.XXX.XXX.XXX/api/projects/<PROJECT_ID>/logs
Content-Type: application/json
Authorization: Bearer AUTHORIZATION_TOKEN

 "I am sad"